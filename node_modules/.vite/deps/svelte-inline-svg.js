import "./chunk-F3FYYIAV.js";

// node_modules/svelte-inline-svg/dist/index.mjs
function t() {
}
function n(t2, n2) {
  for (const e2 in n2)
    t2[e2] = n2[e2];
  return t2;
}
function e(t2) {
  return t2();
}
function o() {
  return /* @__PURE__ */ Object.create(null);
}
function r(t2) {
  t2.forEach(e);
}
function c(t2) {
  return "function" == typeof t2;
}
function s(t2, n2) {
  return t2 != t2 ? n2 == n2 : t2 !== n2 || t2 && "object" == typeof t2 || "function" == typeof t2;
}
function u(t2, n2) {
  const e2 = {};
  n2 = new Set(n2);
  for (const o2 in t2)
    n2.has(o2) || "$" === o2[0] || (e2[o2] = t2[o2]);
  return e2;
}
function l(t2) {
  t2.parentNode.removeChild(t2);
}
function i(t2, n2, e2, o2) {
  return t2.addEventListener(n2, e2, o2), () => t2.removeEventListener(n2, e2, o2);
}
function a(t2, n2, e2) {
  null == e2 ? t2.removeAttribute(n2) : t2.getAttribute(n2) !== e2 && t2.setAttribute(n2, e2);
}
function f(t2, n2) {
  for (const e2 in n2)
    a(t2, e2, n2[e2]);
}
var d;
function p(t2) {
  d = t2;
}
function h() {
  if (!d)
    throw new Error("Function called outside component initialization");
  return d;
}
function m() {
  const t2 = h();
  return (n2, e2, { cancelable: o2 = false } = {}) => {
    const r2 = t2.$$.callbacks[n2];
    if (r2) {
      const c2 = function(t3, n3, { bubbles: e3 = false, cancelable: o3 = false } = {}) {
        const r3 = document.createEvent("CustomEvent");
        return r3.initCustomEvent(t3, e3, o3, n3), r3;
      }(n2, e2, { cancelable: o2 });
      return r2.slice().forEach((n3) => {
        n3.call(t2, c2);
      }), !c2.defaultPrevented;
    }
    return true;
  };
}
var g = [];
var $ = [];
var v = [];
var b = [];
var w = Promise.resolve();
var y = false;
function x() {
  y || (y = true, w.then(S));
}
function _(t2) {
  v.push(t2);
}
var k = /* @__PURE__ */ new Set();
var E = 0;
function S() {
  const t2 = d;
  do {
    for (; E < g.length; ) {
      const t3 = g[E];
      E++, p(t3), L(t3.$$);
    }
    for (p(null), g.length = 0, E = 0; $.length; )
      $.pop()();
    for (let t3 = 0; t3 < v.length; t3 += 1) {
      const n2 = v[t3];
      k.has(n2) || (k.add(n2), n2());
    }
    v.length = 0;
  } while (g.length);
  for (; b.length; )
    b.pop()();
  y = false, k.clear(), p(t2);
}
function L(t2) {
  if (null !== t2.fragment) {
    t2.update(), r(t2.before_update);
    const n2 = t2.dirty;
    t2.dirty = [-1], t2.fragment && t2.fragment.p(t2.ctx, n2), t2.after_update.forEach(_);
  }
}
var M = /* @__PURE__ */ new Set();
function T(n2, s2, u2, i2, a2, f2, h2, m2 = [-1]) {
  const $2 = d;
  p(n2);
  const v2 = n2.$$ = { fragment: null, ctx: null, props: f2, update: t, not_equal: a2, bound: o(), on_mount: [], on_destroy: [], on_disconnect: [], before_update: [], after_update: [], context: new Map(s2.context || ($2 ? $2.$$.context : [])), callbacks: o(), dirty: m2, skip_bound: false, root: s2.target || $2.$$.root };
  h2 && h2(v2.root);
  let b2 = false;
  if (v2.ctx = u2 ? u2(n2, s2.props || {}, (t2, e2, ...o2) => {
    const r2 = o2.length ? o2[0] : e2;
    return v2.ctx && a2(v2.ctx[t2], v2.ctx[t2] = r2) && (!v2.skip_bound && v2.bound[t2] && v2.bound[t2](r2), b2 && function(t3, n3) {
      -1 === t3.$$.dirty[0] && (g.push(t3), x(), t3.$$.dirty.fill(0)), t3.$$.dirty[n3 / 31 | 0] |= 1 << n3 % 31;
    }(n2, t2)), e2;
  }) : [], v2.update(), b2 = true, r(v2.before_update), v2.fragment = !!i2 && i2(v2.ctx), s2.target) {
    if (s2.hydrate) {
      const t2 = (k2 = s2.target, Array.from(k2.childNodes));
      v2.fragment && v2.fragment.l(t2), t2.forEach(l);
    } else
      v2.fragment && v2.fragment.c();
    s2.intro && ((w2 = n2.$$.fragment) && w2.i && (M.delete(w2), w2.i(y2))), function(t2, n3, o2, s3) {
      const { fragment: u3, on_mount: l2, on_destroy: i3, after_update: a3 } = t2.$$;
      u3 && u3.m(n3, o2), s3 || _(() => {
        const n4 = l2.map(e).filter(c);
        i3 ? i3.push(...n4) : r(n4), t2.$$.on_mount = [];
      }), a3.forEach(_);
    }(n2, s2.target, s2.anchor, s2.customElement), S();
  }
  var w2, y2, k2;
  p($2);
}
var A = ["focus", "blur", "fullscreenchange", "fullscreenerror", "scroll", "cut", "copy", "paste", "keydown", "keypress", "keyup", "auxclick", "click", "contextmenu", "dblclick", "mousedown", "mouseenter", "mouseleave", "mousemove", "mouseover", "mouseout", "mouseup", "pointerlockchange", "pointerlockerror", "select", "wheel", "drag", "dragend", "dragenter", "dragstart", "dragleave", "dragover", "drop", "touchcancel", "touchend", "touchmove", "touchstart", "pointerover", "pointerenter", "pointerdown", "pointermove", "pointerup", "pointercancel", "pointerout", "pointerleave", "gotpointercapture", "lostpointercapture"];
function H(e2) {
  let o2, r2, s2, u2 = [{ xmlns: "http://www.w3.org/2000/svg" }, e2[0], e2[3]], i2 = {};
  for (let t2 = 0; t2 < u2.length; t2 += 1)
    i2 = n(i2, u2[t2]);
  return { c() {
    var t2;
    t2 = "svg", o2 = document.createElementNS("http://www.w3.org/2000/svg", t2), f(o2, i2);
  }, m(n2, u3) {
    var l2;
    !function(t2, n3, e3) {
      t2.insertBefore(n3, e3 || null);
    }(n2, o2, u3), o2.innerHTML = e2[1], r2 || (l2 = e2[2].call(null, o2), s2 = l2 && c(l2.destroy) ? l2.destroy : t, r2 = true);
  }, p(t2, [n2]) {
    2 & n2 && (o2.innerHTML = t2[1]), f(o2, i2 = function(t3, n3) {
      const e3 = {}, o3 = {}, r3 = { $$scope: 1 };
      let c2 = t3.length;
      for (; c2--; ) {
        const s3 = t3[c2], u3 = n3[c2];
        if (u3) {
          for (const t4 in s3)
            t4 in u3 || (o3[t4] = 1);
          for (const t4 in u3)
            r3[t4] || (e3[t4] = u3[t4], r3[t4] = 1);
          t3[c2] = u3;
        } else
          for (const t4 in s3)
            r3[t4] = 1;
      }
      for (const t4 in o3)
        t4 in e3 || (e3[t4] = void 0);
      return e3;
    }(u2, [{ xmlns: "http://www.w3.org/2000/svg" }, 1 & n2 && t2[0], 8 & n2 && t2[3]]));
  }, i: t, o: t, d(t2) {
    t2 && l(o2), r2 = false, s2();
  } };
}
function O(t2, e2, o2) {
  const r2 = ["src", "transformSrc"];
  let c2 = u(e2, r2);
  const s2 = m(), l2 = function(t3, n2 = []) {
    const e3 = [...A, ...n2];
    function o3(n3) {
      !function(t4, n4) {
        const e4 = t4.$$.callbacks[n4.type];
        e4 && e4.slice().forEach((t5) => t5.call(this, n4));
      }(t3, n3);
    }
    return (t4) => {
      const n3 = [];
      for (let r3 = 0; r3 < e3.length; r3++)
        n3.push(i(t4, e3[r3], o3));
      return { destroy: () => {
        for (let t5 = 0; t5 < n3.length; t5++)
          n3[t5]();
      } };
    };
  }(h());
  let { src: a2 } = e2, { transformSrc: f2 = (t3) => t3 } = e2;
  var d2;
  d2 = () => {
    !function(t3) {
      var n2;
      g2[t3] || ($2 && ($2 = false, s2("unloaded")), g2[t3] = (n2 = t3, new Promise((t4, e3) => {
        const o3 = new XMLHttpRequest();
        o3.open("GET", n2, true), o3.onload = () => {
          if (o3.status >= 200 && o3.status < 400)
            try {
              const n3 = new DOMParser();
              let r3 = n3.parseFromString(o3.responseText, "text/xml").querySelector("svg");
              r3 ? (r3 = f2(r3), t4(r3)) : e3(new Error('Loaded file is not valid SVG"'));
            } catch (t5) {
              e3(t5);
            }
          else
            e3(new Error("Error loading SVG"));
        }, o3.onerror = e3, o3.send();
      }))), g2[t3].then(async (t4) => {
        const n3 = t4.attributes;
        for (let t5 = n3.length - 1; t5 >= 0; t5--)
          o2(0, v2[n3[t5].name] = n3[t5].value, v2);
        o2(1, p2 = t4.innerHTML), await (x(), w), $2 = true, s2("loaded");
      }).catch((n3) => {
        delete g2[t3], console.error(n3);
      });
    }(a2);
  }, h().$$.on_mount.push(d2);
  let p2, g2 = {}, $2 = false, v2 = {};
  return t2.$$set = (t3) => {
    e2 = n(n({}, e2), function(t4) {
      const n2 = {};
      for (const e3 in t4)
        "$" !== e3[0] && (n2[e3] = t4[e3]);
      return n2;
    }(t3)), o2(3, c2 = u(e2, r2)), "src" in t3 && o2(4, a2 = t3.src), "transformSrc" in t3 && o2(5, f2 = t3.transformSrc);
  }, [v2, p2, l2, c2, a2, f2];
}
var dist_default = class extends class {
  $destroy() {
    !function(t2, n2) {
      const e2 = t2.$$;
      null !== e2.fragment && (r(e2.on_destroy), e2.fragment && e2.fragment.d(n2), e2.on_destroy = e2.fragment = null, e2.ctx = []);
    }(this, 1), this.$destroy = t;
  }
  $on(t2, n2) {
    const e2 = this.$$.callbacks[t2] || (this.$$.callbacks[t2] = []);
    return e2.push(n2), () => {
      const t3 = e2.indexOf(n2);
      -1 !== t3 && e2.splice(t3, 1);
    };
  }
  $set(t2) {
    var n2;
    this.$$set && (n2 = t2, 0 !== Object.keys(n2).length) && (this.$$.skip_bound = true, this.$$set(t2), this.$$.skip_bound = false);
  }
} {
  constructor(t2) {
    super(), T(this, t2, O, H, s, { src: 4, transformSrc: 5 });
  }
};
export {
  dist_default as default
};
//# sourceMappingURL=svelte-inline-svg.js.map
